# remap prefix from 'C-b' to 'C-a'
#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix

# Display help
bind -n F2 new-window  "cat ~/.tmux.conf | grep -P '#{2}' | sed 's/^#\#//g' | less" \; rename-window "help"
bind -n F3 new-window  "tmux list-keys | less" \; rename-window "list-keys"

# split panes using | and -
# bind | split-window -h
# bind - split-window -v
# unbind '"'
# unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# switch panes using Alt-arrow without prefix
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D
#bind -T root M-Left
bind -n M-Up send-keys "\e[1;3A"
bind -n M-Down send-keys "\e[1;3B"
bind -n M-Right send-keys "\e[1;3C"
bind -n M-Left send-keys "\e[1;3D"

# switch window using Shift-arrow without prefix
#bind -n S-Right next-window
#bind -n S-Left previous-window

# Enable/disable mouse mode (tmux 2.1 and above)
set -g mouse on

# Enable mouse control (clickable windows, panes, resizable panes (tmux 2.0 and below)
#set -g mouse-select-window on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on

# don't rename windows automatically
###set-option -g allow-rename off

# panes
#set -g pane-border-fg black
#set -g pane-active-border-fg brightred

# Status bar design
# status line
# set -g status-utf8 on
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
#set -g message-fg black
#set -g message-bg yellow
#set -g message-command-fg blue
#set -g message-command-bg black

#window mode
#setw -g mode-bg colour6
#setw -g mode-fg colour0

# current window status
#setw -g window-status-current-bg colour45
#setw -g window-status-current-fg colour0
#setw -g window-status-current-attr bold

# other windows status
#setw -g window-status-fg colour45
#setw -g window-status-bg colour0
#setw -g window-status-attr dim

# bell window status
#setw -g window-status-bell-attr bold
#setw -g window-status-bell-fg colour255
#setw -g window-status-bell-bg colour1

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none
set-window-option -g monitor-activity off

# The modes
setw -g clock-mode-colour colour135
#setw -g mode-attr bold
#setw -g mode-fg colour196
#setw -g mode-bg colour238

# The panes
#set -g pane-border-bg colour235
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour236
#set -g pane-active-border-fg colour51

# The statusbar
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
#set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour245,bold] F2=help F3=list-keys #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

# Help text (everything that starts with double '#' will be displayed in a new window
# when F2 is pressed).

## TMUX Help
##
## tmux is a "terminal multiplexer", it enables a number of terminals (or windows) to be accessed and controlled from a single terminal.
##
## There are some features changed (compared to default tmux capabilities):
##
## - The default prefix is changed from <ctrl>-<b> to <ctrl>-<a>.
## - Switch between windows using the <shift>-<left arrow> and <shift>-<right arrow>.
## - Use <ctrl>-<a> followed by 'r' to reload the ~/.tmux.conf file.
## - Split a window horizontal into panes using the prefix '|'.
## - Split a window vertical into panes using the  prefix '-'.
## - Use <alt>-<left arrow> and <alt>-<right arrow> to switch horizonal between planes.
## - Use <alt>-<arrow up> and <alt>-<arrow down> to switch vertical between planes.
## - Press F2 for this 'help screen' (and press 'q' to return).
## - Press F3 for the complete list of hot-keys (and prtess 'q' to return).
##
## Check 'man tmux' for more help info.
##
## Or 'https://github.com/tedsluis/tmux.conf'
##
## Ted Sluis
## ted.sluis@gmail.com

# xclip -in -selection clipboard

set -g update-environment "DISPLAY WSLENV WAYLAND_DISPLAY XAUTHORITY SSH_AUTH_SOCK"

unbind -T copy-mode MouseDragEnd1Pane

# copy-command "xclip -selection c"
#if -b 'test -n "$WSLENV"' {
if '/bin/bash -c "[[ \"$TERM\" == xterm* ]]"' {

# tmux-256color instead of screen-256color enables italics
set -g default-terminal "tmux-256color"

# Tc enables true color
set -ag terminal-overrides ",*256col*:colors=256:Tc"

# Ms modifies OSC 52 clipboard handling to work with mosh, see
# https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
set -ag terminal-overrides "vte*:XT:Ms=\\E]52;c;%p2%s\\7,xterm*:XT:Ms=\\E]52;c;%p2%s\\7"

# enable OSC 52 clipboard
# https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
set -g set-clipboard on

# use bracketed paste, if the running application (vim/emacs/weechat) has
# sent the terminal code to enable it.
#bind-key ] paste-buffer -p

setw -g aggressive-resize on

# http://comments.gmane.org/gmane.emacs.vim-emulation/1557
set -s escape-time 0

bind -T root S-insert paste-buffer -p
bind -T copy-mode S-insert paste-buffer -p
bind -T copy-mode C-insert send-keys -X copy-selection \; send-keys -X cancel
bind -T command-mode S-insert paste-buffer -p

#bind -T root MouseDown3Pane run-shell 'echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d
#bind -T copy-mode C-w send -X copy-pipe-and-cancel 'clip.exe'
#bind -T copy-mode M-w send -X copy-pipe-and-cancel 'clip.exe'
#bind -T copy-mode MouseUp3Pane send -X copy-pipe-and-cancel 'clip.exe'
#bind -T copy-mode MouseUp1Pane send -X clear-selection

#bind -T command-mode C-w send -X copy-pipe-and-cancel 'clip.exe'
#bind -T command-mode M-w send -X copy-pipe-and-cancel 'clip.exe'
#bind -T command-mode C-y run-shell 'echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d


bind -T root C-Space if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-Space' "copy-mode \; send -X begin-selection"
#bind -T root C-y if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
#bind -T root C-w if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]] || [[ "#{pane_current_command}" == "nano" ]]"' 'send-keys C-w' 'send -X copy-pipe-and-cancel "clip.exe"'
#bind -T root M-w if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys M-w' 'send -X copy-pipe-and-cancel "clip.exe"'
#display-message "in windows"


} {

# terminal
#set -g default-terminal "putty-256color"
set -g default-terminal "screen-256color"
#set-window-option -g xterm-keys on
#set -g terminal-overrides "screen*:kLFT5=\eOD:kRIT5=\eOC:kUP5=\eOA:kDN5=\eOB:smkx@:rmkx@"

#if '/bin/bash -c "[[ "$(grep WSL2 /proc/version; echo $?)" == "0" ]]"' {
if '/bin/bash -c "[[ $(grep WSL2 /proc/version > /dev/null; echo $?) == 0 ]]"' {
bind -T root MouseDown3Pane run-shell 'echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d
bind -T copy-mode C-w send -X copy-pipe-and-cancel 'clip.exe'
bind -T copy-mode M-w send -X copy-pipe-and-cancel 'clip.exe'
bind -T copy-mode MouseUp3Pane send -X copy-pipe-and-cancel 'clip.exe'
bind -T copy-mode MouseUp1Pane send -X clear-selection

bind -T command-mode C-w send -X copy-pipe-and-cancel 'clip.exe'
bind -T command-mode M-w send -X copy-pipe-and-cancel 'clip.exe'
bind -T command-mode C-y run-shell 'echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d


bind -T root C-Space if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-Space' "copy-mode \; send -X begin-selection"
bind -T root C-y if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
bind -T root C-w if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]] || [[ "#{pane_current_command}" == "nano" ]]"' 'send-keys C-w' 'send -X copy-pipe-and-cancel "clip.exe"'
bind -T root M-w if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys M-w' 'send -X copy-pipe-and-cancel "clip.exe"'
#display-message "in windows"


bind -T root S-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
bind -T copy-mode S-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
bind -T copy-mode C-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys M-w' 'send -X copy-pipe-and-cancel "clip.exe"'
bind -T command-mode S-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "echo -n | powershell.exe -Command get-clipboard | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'

} {
bind -T root MouseDown3Pane run-shell 'xclip -selection c -o | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d
bind -T copy-mode C-w send -X copy-pipe-and-cancel 'xclip -selection c'
bind -T copy-mode M-w send -X copy-pipe-and-cancel 'xclip -selection c'
bind -T copy-mode MouseUp3Pane send -X copy-pipe-and-cancel 'xclip -selection c'
bind -T copy-mode MouseUp1Pane send -X clear-selection

bind -T command-mode C-w send -X copy-pipe-and-cancel 'xclip -selection c'
bind -T command-mode M-w send -X copy-pipe-and-cancel 'xclip -selection c'
bind -T command-mode C-y run-shell 'xclip -selection c -o | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d

bind -T root C-Space if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-Space' "copy-mode \; send -X begin-selection"
bind -T root C-y if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "xclip -selection c -o | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
bind -T root C-w if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]] || [[ "#{pane_current_command}" == "nano" ]]"' 'send-keys C-w' 'send -X copy-pipe-and-cancel "xclip -selection c"'
bind -T root M-w if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys M-w' 'send -X copy-pipe-and-cancel "xclip -selection c"'

bind -T root S-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "xclip -selection c -o | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
bind -T copy-mode S-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "xclip -selection c -o | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'
bind -T copy-mode C-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]] || [[ "#{pane_current_command}" == "nano" ]]"' 'send-keys C-w' 'send -X copy-pipe-and-cancel "xclip -selection c"'
bind -T command-mode S-insert if '/bin/bash -c "[[ "#{pane_current_command}" == "emacs" ]] || [[ "#{pane_current_command}" == "emacsclient" ]]"' 'send-keys C-y' 'run-shell "xclip -selection c -o | tmux load-buffer -bx-clip - \\\; paste-buffer -bx-clip -d"'

#display-message "not windows"
}


}
#bind -T copy-mode MouseDragEnd1Pane send -X copy-pipe 'xclip -selection c'
#bind -T root C-y run-shell 'xclip -selection c -o | tmux load-buffer -bx-clip -' \; paste-buffer -b x-clip -d
#bind -T root C-i run-shell 'tmux set-buffer -b x-clip "$(xclip -selection c -o)"'
#bind -T root C-u paste-buffer -b x-clip -d
# tmux set-buffer -b x-clip "\$(xclip -selection c -o)"' \;
#paste-buffer -b x-xclip -d
#bind -T command-mode Home send -X start-of-line
#bind -T command-mode End send -X end-of-line


#bind -T copy-mode C-g 'send -X cancel'